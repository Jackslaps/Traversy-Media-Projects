Primitive Data Types vs. Reference Types

Primitive Data Types:
  - Is stored directly in the location the variable accesses 
  - Is stored on the stack
  - When you access primitive data types, you access it by is actual data value

  Strings (Array of characters)
  Number (Integers, floats, etc are all considered numbers in JS)
  Boolean (True or False)
  Null (Intentional empty value)
  Undefined (Variable not assigned a value)
  Symbols (New to ES6)

Reference Data Types:
  - Are objects that are accessed by reference 
  - Are stored on the heap
  - Is a pointer to a location in memory

  Arrays
  Object Literals
  Functions
  Dates
  Anything else that can be stored

JavaScript is a dynamically typed language
  - Types are associated with values, not variables
  - The same variable can hold multiple types
    + Variables can be assigned to a string of characters and then changed to numbers later if you wanted to with no errors
  - We do not need to specify types
  - Most other languages are statically typed (Java, C#, C++, etc.)
    + Have to define what kind of value is going to be in the variable
  - There are supersets of JS and addons to allow static typing (TypeScript, FlowJS, etc.)
