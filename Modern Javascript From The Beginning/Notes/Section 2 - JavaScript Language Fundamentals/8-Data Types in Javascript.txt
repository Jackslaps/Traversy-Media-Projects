Primitive Data Types vs Reference Types

Primitive Data Types:
    - Data is stored directly in the location the variable accesses
    - Stored on the stack -> When you access primitive data types you access its actual stored value
    Types:
        Strings
        Number -> Integers, decimals, floats are all considered "numbers," other languages have separate types of numbers
        Boolean -> True/False
        NULL -> Empty value
        Undefined -> Declared variable but nothing is defined in it
        Symbols (ES6)

Reference Data Types:
    - Objects accessed by reference
    - Objects that are stored on the heap, which as to do with dynamically allocated memory
    - Are pointers to a location in memory
    Types:
        Arrays
        Object Literals
        Functions
        Dates
        Anything else that you can store
        Object wrappers for strings and numbers

Javascript is a "dynamically typed language"
    - Types are associated with values, not variables
    - The same variable can hold multiple types
    - We do not need to specify types -> Most other languages are statically typed (Java, C#, C++, etc.) where you have to define what is going to be allowed in that variable
    - There are supersets of JS and addons to allow for static typing (TypeScript, Flow)

